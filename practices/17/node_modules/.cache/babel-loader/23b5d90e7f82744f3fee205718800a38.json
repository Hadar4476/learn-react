{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hadar\\\\OneDrive\\\\Desktop\\\\Full Stack\\\\React\\\\Max - 2022\\\\practices\\\\17\\\\src\\\\components\\\\Quotes\\\\QuoteList\\\\QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem/QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sortQuotes = (quotes, sortBy) => {\n  return quotes.sort((curr, next) => {\n    if (sortBy === \"asc\") {\n      return curr.id > next.id ? 1 : -1;\n    } else {\n      return curr.id < next.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = props => {\n  _s();\n\n  const {\n    quotes\n  } = props;\n  const history = useHistory();\n  const {\n    pathname,\n    search\n  } = useLocation();\n  const queryParams = new URLSearchParams(search);\n  const sortBy = queryParams.get(\"sortBy\");\n  const sortByQuery = sortBy === \"asc\" ? \"desc\" : \"asc\";\n\n  const onSortQuotes = () => {\n    history.push(`${pathname}?sortBy=${sortByQuery}`);\n  };\n\n  const quoteElements = quotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n    id: quote.id,\n    author: quote.author,\n    text: quote.text\n  }, quote.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSortQuotes,\n        children: [\"Sort \", sortBy === \"asc\" ? \"Descending\" : \"Ascending \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: quoteElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteList, \"kWgxNNHy1fUy0zRCuJIdx4TF/pY=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["React","Fragment","useState","useHistory","useLocation","QuoteItem","classes","sortQuotes","quotes","sortBy","sort","curr","next","id","QuoteList","props","history","pathname","search","queryParams","URLSearchParams","get","sortByQuery","onSortQuotes","push","quoteElements","map","quote","author","text","sorting","list"],"sources":["C:/Users/Hadar/OneDrive/Desktop/Full Stack/React/Max - 2022/practices/17/src/components/Quotes/QuoteList/QuoteList.js"],"sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem/QuoteItem\";\n\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, sortBy) => {\n  return quotes.sort((curr, next) => {\n    if (sortBy === \"asc\") {\n      return curr.id > next.id ? 1 : -1;\n    } else {\n      return curr.id < next.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const { quotes } = props;\n\n  const history = useHistory();\n  const { pathname, search } = useLocation();\n\n  const queryParams = new URLSearchParams(search);\n  const sortBy = queryParams.get(\"sortBy\");\n  const sortByQuery = sortBy === \"asc\" ? \"desc\" : \"asc\";\n\n  const onSortQuotes = () => {\n    history.push(`${pathname}?sortBy=${sortByQuery}`);\n  };\n\n  const quoteElements = quotes.map((quote) => (\n    <QuoteItem\n      key={quote.id}\n      id={quote.id}\n      author={quote.author}\n      text={quote.text}\n    />\n  ));\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={onSortQuotes}>\n          Sort {sortBy === \"asc\" ? \"Descending\" : \"Ascending \"}\n        </button>\n      </div>\n      <ul className={classes.list}>{quoteElements}</ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AAEA,OAAOC,SAAP,MAAsB,uBAAtB;AAEA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoB;EACrC,OAAOD,MAAM,CAACE,IAAP,CAAY,CAACC,IAAD,EAAOC,IAAP,KAAgB;IACjC,IAAIH,MAAM,KAAK,KAAf,EAAsB;MACpB,OAAOE,IAAI,CAACE,EAAL,GAAUD,IAAI,CAACC,EAAf,GAAoB,CAApB,GAAwB,CAAC,CAAhC;IACD,CAFD,MAEO;MACL,OAAOF,IAAI,CAACE,EAAL,GAAUD,IAAI,CAACC,EAAf,GAAoB,CAApB,GAAwB,CAAC,CAAhC;IACD;EACF,CANM,CAAP;AAOD,CARD;;AAUA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAC3B,MAAM;IAAEP;EAAF,IAAaO,KAAnB;EAEA,MAAMC,OAAO,GAAGb,UAAU,EAA1B;EACA,MAAM;IAAEc,QAAF;IAAYC;EAAZ,IAAuBd,WAAW,EAAxC;EAEA,MAAMe,WAAW,GAAG,IAAIC,eAAJ,CAAoBF,MAApB,CAApB;EACA,MAAMT,MAAM,GAAGU,WAAW,CAACE,GAAZ,CAAgB,QAAhB,CAAf;EACA,MAAMC,WAAW,GAAGb,MAAM,KAAK,KAAX,GAAmB,MAAnB,GAA4B,KAAhD;;EAEA,MAAMc,YAAY,GAAG,MAAM;IACzBP,OAAO,CAACQ,IAAR,CAAc,GAAEP,QAAS,WAAUK,WAAY,EAA/C;EACD,CAFD;;EAIA,MAAMG,aAAa,GAAGjB,MAAM,CAACkB,GAAP,CAAYC,KAAD,iBAC/B,QAAC,SAAD;IAEE,EAAE,EAAEA,KAAK,CAACd,EAFZ;IAGE,MAAM,EAAEc,KAAK,CAACC,MAHhB;IAIE,IAAI,EAAED,KAAK,CAACE;EAJd,GACOF,KAAK,CAACd,EADb;IAAA;IAAA;IAAA;EAAA,QADoB,CAAtB;EASA,oBACE,QAAC,QAAD;IAAA,wBACE;MAAK,SAAS,EAAEP,OAAO,CAACwB,OAAxB;MAAA,uBACE;QAAQ,OAAO,EAAEP,YAAjB;QAAA,oBACQd,MAAM,KAAK,KAAX,GAAmB,YAAnB,GAAkC,YAD1C;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAI,SAAS,EAAEH,OAAO,CAACyB,IAAvB;MAAA,UAA8BN;IAA9B;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CAjCD;;GAAMX,S;UAGYX,U,EACaC,W;;;KAJzBU,S;AAmCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}