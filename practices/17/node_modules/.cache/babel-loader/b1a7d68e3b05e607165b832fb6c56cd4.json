{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hadar\\\\OneDrive\\\\Desktop\\\\Full Stack\\\\React\\\\Max - 2022\\\\practices\\\\17\\\\src\\\\pages\\\\QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Route, useLocation, useParams } from \"react-router-dom\";\nimport HighlightedQuote from \"../components/Quotes/HighlightedQuote/HighlightedQuote\";\nimport Comments from \"../components/Comments/Comments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst quotes = [{\n  id: \"q1\",\n  author: \"Authour #1\",\n  text: \"Text from quote #1\"\n}, {\n  id: \"q2\",\n  author: \"Authour #2\",\n  text: \"Text from quote #2\"\n}, {\n  id: \"q3\",\n  author: \"Authour #3\",\n  text: \"Text from quote #3\"\n}, {\n  id: \"q4\",\n  author: \"Authour #4\",\n  text: \"Text from quote #4\"\n}, {\n  id: \"q5\",\n  author: \"Authour #5\",\n  text: \"Text from quote #5\"\n}];\n\nconst QuoteDetail = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const quote = quotes.find(q => q.id === id);\n  const {\n    pathname\n  } = useLocation();\n  console.log(pathname);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  const {\n    text,\n    author\n  } = quote;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: text,\n      author: author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${pathname}/comments`,\n      component: Comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"RB7ziB2w/Xh23ujkh0QHXNr/6Vs=\", false, function () {\n  return [useParams, useLocation];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["React","Route","useLocation","useParams","HighlightedQuote","Comments","quotes","id","author","text","QuoteDetail","quote","find","q","pathname","console","log"],"sources":["C:/Users/Hadar/OneDrive/Desktop/Full Stack/React/Max - 2022/practices/17/src/pages/QuoteDetail.js"],"sourcesContent":["import React from \"react\";\r\nimport { Route, useLocation, useParams } from \"react-router-dom\";\r\n\r\nimport HighlightedQuote from \"../components/Quotes/HighlightedQuote/HighlightedQuote\";\r\nimport Comments from \"../components/Comments/Comments\";\r\n\r\nconst quotes = [\r\n  { id: \"q1\", author: \"Authour #1\", text: \"Text from quote #1\" },\r\n  { id: \"q2\", author: \"Authour #2\", text: \"Text from quote #2\" },\r\n  { id: \"q3\", author: \"Authour #3\", text: \"Text from quote #3\" },\r\n  { id: \"q4\", author: \"Authour #4\", text: \"Text from quote #4\" },\r\n  { id: \"q5\", author: \"Authour #5\", text: \"Text from quote #5\" },\r\n];\r\n\r\nconst QuoteDetail = () => {\r\n  const { id } = useParams();\r\n  const quote = quotes.find((q) => q.id === id);\r\n\r\n  const { pathname } = useLocation();\r\n  console.log(pathname);\r\n\r\n  if (!quote) {\r\n    return <p>No quote found</p>;\r\n  }\r\n\r\n  const { text, author } = quote;\r\n\r\n  return (\r\n    <div>\r\n      <HighlightedQuote text={text} author={author} />\r\n      {/* <Route path=\"/quotes/:id/comments\" component={Comments} /> */}\r\n      <Route path={`${pathname}/comments`} component={Comments} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,kBAA9C;AAEA,OAAOC,gBAAP,MAA6B,wDAA7B;AACA,OAAOC,QAAP,MAAqB,iCAArB;;AAEA,MAAMC,MAAM,GAAG,CACb;EAAEC,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,YAApB;EAAkCC,IAAI,EAAE;AAAxC,CADa,EAEb;EAAEF,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,YAApB;EAAkCC,IAAI,EAAE;AAAxC,CAFa,EAGb;EAAEF,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,YAApB;EAAkCC,IAAI,EAAE;AAAxC,CAHa,EAIb;EAAEF,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,YAApB;EAAkCC,IAAI,EAAE;AAAxC,CAJa,EAKb;EAAEF,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,YAApB;EAAkCC,IAAI,EAAE;AAAxC,CALa,CAAf;;AAQA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAM;IAAEH;EAAF,IAASJ,SAAS,EAAxB;EACA,MAAMQ,KAAK,GAAGL,MAAM,CAACM,IAAP,CAAaC,CAAD,IAAOA,CAAC,CAACN,EAAF,KAASA,EAA5B,CAAd;EAEA,MAAM;IAAEO;EAAF,IAAeZ,WAAW,EAAhC;EACAa,OAAO,CAACC,GAAR,CAAYF,QAAZ;;EAEA,IAAI,CAACH,KAAL,EAAY;IACV,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,MAAM;IAAEF,IAAF;IAAQD;EAAR,IAAmBG,KAAzB;EAEA,oBACE;IAAA,wBACE,QAAC,gBAAD;MAAkB,IAAI,EAAEF,IAAxB;MAA8B,MAAM,EAAED;IAAtC;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,KAAD;MAAO,IAAI,EAAG,GAAEM,QAAS,WAAzB;MAAqC,SAAS,EAAET;IAAhD;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CApBD;;GAAMK,W;UACWP,S,EAGMD,W;;;KAJjBQ,W;AAsBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}