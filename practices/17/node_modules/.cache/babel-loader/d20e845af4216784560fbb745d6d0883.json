{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hadar\\\\OneDrive\\\\Desktop\\\\Full Stack\\\\React\\\\Max - 2022\\\\practices\\\\17\\\\src\\\\components\\\\Quotes\\\\QuoteForm\\\\QuoteForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport Card from \"../../UI/Card/Card\";\nimport LoadingSpinner from \"../../UI/LoadingSpinner/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteForm = props => {\n  _s();\n\n  const {\n    isLoading,\n    onAddQuote\n  } = props;\n  const [quote, setQuote] = useState({\n    text: \"\",\n    author: \"\"\n  });\n  const isValid = Object.keys(quote).every(k => quote[k].trim());\n\n  const inputChangeHandler = _ref => {\n    let {\n      target\n    } = _ref;\n    const {\n      value,\n      name\n    } = target;\n    setQuote(prevState => {\n      const updateState = { ...prevState\n      };\n      updateState[name] = value;\n      return updateState;\n    });\n  };\n\n  const submitFormHandler = event => {\n    event.preventDefault();\n\n    if (!isValid) {\n      return;\n    }\n\n    const {\n      text,\n      author\n    } = quote;\n    const trimmedQuoteData = {\n      text: text.trim(),\n      author: author.trim()\n    };\n    onAddQuote(trimmedQuoteData);\n  };\n\n  const spinnerRenderer = isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.loading,\n    children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: submitFormHandler,\n        children: [spinnerRenderer, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"author\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"author\",\n            name: \"author\",\n            type: \"text\",\n            value: quote.author,\n            onChange: inputChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"text\",\n            name: \"text\",\n            rows: \"5\",\n            value: quote.text,\n            onChange: inputChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            disabled: !isValid,\n            children: \"Add Quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteForm, \"sfr/99WVLreiNkXUOyrve4chP9E=\");\n\n_c = QuoteForm;\nexport default QuoteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteForm\");","map":{"version":3,"names":["React","Fragment","useState","Prompt","Card","LoadingSpinner","classes","QuoteForm","props","isLoading","onAddQuote","quote","setQuote","text","author","isValid","Object","keys","every","k","trim","inputChangeHandler","target","value","name","prevState","updateState","submitFormHandler","event","preventDefault","trimmedQuoteData","spinnerRenderer","loading","form","control","actions"],"sources":["C:/Users/Hadar/OneDrive/Desktop/Full Stack/React/Max - 2022/practices/17/src/components/Quotes/QuoteForm/QuoteForm.js"],"sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../../UI/Card/Card\";\nimport LoadingSpinner from \"../../UI/LoadingSpinner/LoadingSpinner\";\n\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const { isLoading, onAddQuote } = props;\n\n  const [quote, setQuote] = useState({\n    text: \"\",\n    author: \"\",\n  });\n\n  const isValid = Object.keys(quote).every((k) => quote[k].trim());\n\n  const inputChangeHandler = ({ target }) => {\n    const { value, name } = target;\n\n    setQuote((prevState) => {\n      const updateState = { ...prevState };\n      updateState[name] = value;\n\n      return updateState;\n    });\n  };\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    if (!isValid) {\n      return;\n    }\n\n    const { text, author } = quote;\n\n    const trimmedQuoteData = {\n      text: text.trim(),\n      author: author.trim(),\n    };\n\n    onAddQuote(trimmedQuoteData);\n  };\n\n  const spinnerRenderer = isLoading && (\n    <div className={classes.loading}>\n      <LoadingSpinner />\n    </div>\n  );\n\n  return (\n    <Fragment>\n      {/* <Prompt\n        when={shouldTriggerPrompt}\n        message={(location) => \"Are you sure you want to leave?\"}\n      /> */}\n      <Card>\n        <form className={classes.form} onSubmit={submitFormHandler}>\n          {spinnerRenderer}\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input\n              id=\"author\"\n              name=\"author\"\n              type=\"text\"\n              value={quote.author}\n              onChange={inputChangeHandler}\n            />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea\n              id=\"text\"\n              name=\"text\"\n              rows=\"5\"\n              value={quote.text}\n              onChange={inputChangeHandler}\n            ></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className=\"btn\" disabled={!isValid}>\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}